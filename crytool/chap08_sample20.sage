print("\n# CHAP08 -- Script-SAMPLE 20: =========")

load("./bitciphers.sage")

reg15 = LFSR([1,0,0,0,0,0,0,0,0,0,0,0,0,0,1])
reg15.setState([0,1,1,0,1,0,1,1,0,0,0,1,0,0,1])

reg16 = LFSR([0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,1])
reg16.setState([0,1,1,0,1,0,1,1,0,0,0,1,0,0,1,1])

reg17 = LFSR([0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1])
reg17.setState([0,1,1,0,1,0,1,1,0,0,0,1,0,0,1,1,1])

nofBits = 100
outlist15 = reg15.nextBits(nofBits)
print("outlist15:\n", outlist15)
outlist16 = reg16.nextBits(nofBits)
print("outlist16:\n", outlist16)
outlist17 = reg17.nextBits(nofBits)
print("outlist17:\n", outlist17)

#------------------------------------
# CHAP08 -- Script-SAMPLE 20: =========
# outlist15:
# [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0,
#  0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1,
#  0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0,
#  1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1,
#  0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1]
# outlist16:
# [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1,
#  0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1,
#  1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0,
#  1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1,
#  1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1]
# outlist17:
# [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1,
#  0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0,
#  1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0,
#  0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,
#  0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0]

